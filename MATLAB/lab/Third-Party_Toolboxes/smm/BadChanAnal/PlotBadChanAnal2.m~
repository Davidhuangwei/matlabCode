function PlotBadChanAnal(animal,behaviorCell,depMeasureCell,shanks,allChans,frequencies,saveFigBool)
% function PlotBadChanAnal(animal,behaviorCell,depMeasureCell,fileBaseCell,shanks,allChans,frequencies,saveFigBool)
%
% This function plots the analysis of bad channels
%
% INPUT VARIABLES
% animal: string used for naming
% behaviorCell: cell array of strings used to determine which analysis files will be used.
% The behaviors designated will be averaged together for plotting.
% depMeasureCell: cell array of strings that determine which dependent
% measures will separately plotted (iteratively). Possible dependent
% varables are powSim, coh, csd, phase. powSim (power similarity) and
% coh (coherence) have been found to be the most useful.
% shanks: cell array defining the channel assignment for each shank of the
% silicon probe. 
%   default = {1:16,17:32,33:48,49:64,65:80,81:96}
% allChans: vector defining the channels from all shanks
%   default = 1:96
% frequencies: vector defining the frequencies to be visualized separately
%   default = [4; 10; 50; 100; 180; 300; 700; 1000; 1900]
% saveFigBool: boolean to determine whether .png files are saved to disk
%   default = 1
%
% REQUIRED FILE
% A .mat file with the name [animal '_' behavior '_BadChanAnal_Segs.mat']
% containing the variables:
% fileBaseCell: a cell array containing a text string in each cell that is the
% basename of a .dat file.


onlyreal = 0;
diag = 1;

if ~exist('shanks','var') | isempty(shanks)
    shanks = {1:16,17:32,33:48,49:64,65:80,81:96};
end
if ~exist('allChans','var') | isempty(allChans)
    allChans = 1:96;
end
if ~exist('frequencies','var') | isempty(frequencies)
    frequencies = [4; 10; 50; 100; 180; 300; 700; 1000; 1900];
end
if ~exist('saveFigBool','var') | isempty(saveFigBool)
    saveFigBool = 1;
end

for z=1:length(depMeasureCell)
    behavior = [];
    aveDepVar = [];
    depMeasure = depMeasureCell{z};
    for i=1:length(behaviorCell)
        if isempty(behavior)
            behavior = behaviorCell{i};
        else
            behavior = [behavior '+' behaviorCell{i}];
        end

        fileName = [animal '_' behaviorCell{i} '_BadChanAnal_Segs.mat'];
        load(fileName);
        fprintf('\nLoading: %s\n',fileName');
            
        if strcmp(animal,'sm9608') | strcmp(animal,'sm9614')
            firstFile = fileBaseCell{1}(8:10);
            lastFile = fileBaseCell{end}(8:10);
        elseif strcmp(animal,'sm9603') | strcmp(animal,'sm9601')
            firstFile = fileBaseCell{1}(10:12);
            lastFile = fileBaseCell{end}(10:12);
        else
            firstFile = fileBaseCell{1};
            lastFile = fileBaseCell{end};
        end


        if strcmp(depMeasure,'powSim')
            depMeasFile = depMeasure;
            fileName = [behaviorCell{i} '_' depMeasFile '_' firstFile '-' lastFile '.mat'];
            load(fileName);
            fprintf('\nLoading: %s\n',fileName);
            depVar = avePowSim;
            clear avePowSim;
        elseif strcmp(depMeasure,'coh')
            depMeasFile = depMeasure;
            fileName = [behaviorCell{i} '_' depMeasFile '_' firstFile '-' lastFile '.mat'];
            load(fileName);
            fprintf('\nLoading: %s\n',fileName);
            depVar = aveCohYo;
            clear aveCohYo;
        elseif strcmp(depMeasure,'csd')
            depMeasFile = depMeasure;
            fileName = [behaviorCell{i} '_' depMeasFile '_' firstFile '-' lastFile '.mat'];
            load(fileName);
            fprintf('\nLoading: %s\n',fileName);
            depVar = aveYo;
            clear aveYo;
        elseif strcmp(depMeasure,'phase')
            depMeasFile = 'coh';
            fileName = [behaviorCell{i} '_' depMeasFile '_' firstFile '-' lastFile '.mat'];
            load(fileName);
            fprintf('\nLoading: %s\n',fileName);
            depVar = aveCohYo;
            clear aveCohYo;
        end

        if isempty(aveDepVar)
            aveDepVar = zeros(size(depVar));
        end
        aveDepVar = aveDepVar + depVar./length(behaviorCell);
        clear depVar;
        clear fileBaseCell;
    end

    %% averaged across all frequencies %%
    %% for all Channels %%
    figure(1)
    clf
    plotData = squeeze(mean(aveDepVar(:,allChans,allChans),1));
    if strcmp(depMeasure,'coh') | strcmp(depMeasure,'csd')
        if onlyreal == 0
            plotData = abs(plotData);
        else
            plotData = real(plotData);
        end
    end
    if strcmp(depMeasure,'phase')
        plotData = angle(plotData);
        %plotData = 1-(abs(angle(plotData))./pi);
    end
    if diag == 0;
        plotData = tril(plotData,-1);
    end
    imagesc(plotData);
    title(['ave ' depMeasure ': ' behavior ' files ' firstFile '-' lastFile ', ch ' num2str(allChans(1)) '-' num2str(allChans(end))],'fontsize',7);
    set(gca,'xtick',[allChans(1:2:length(allChans))],'xticklabel',[allChans(1:2:length(allChans))],'ytick',[allChans(1:2:length(allChans))],'yticklabel',[allChans(1:2:length(allChans))],'fontsize',4);
    %cLimits = [min(min(min(aveDepVar))) 0.7];
    %cLimits = [0.3 0.7];
    %set(gca,'clim',cLimits);
    %set(gca,'clim',[0 1]);
    colorbar;
    if saveFigBool
        print([depMeasure '_' behavior num2str(allChans(1)) '-' num2str(allChans(end))], '-dpng', '-r125');
        %print(['SFNposter2005/' depMeasure '_' behavior '_ch' num2str(allChans(1)) '-' num2str(allChans(end)) '_Ave' num2str(fo(1)) '-' num2str(fo(end)) 'Hz'], '-depsc', '-adobecset')
    else
        keyboard
    end
    
    %% for shanks individually %%
    figure(2)
    for k=1:length(shanks)
        clf;
        subplot(ceil(sqrt(length(shanks))),ceil(sqrt(length(shanks))),k)
        plotData = squeeze(mean(aveDepVar(:,shanks{k},shanks{k}),1));
        if strcmp(depMeasure,'coh') | strcmp(depMeasure,'csd')
            if onlyreal == 0
                plotData = abs(plotData);
            else
                plotData = real(plotData);
            end
        end
        if strcmp(depMeasure,'phase')
            plotData = angle(plotData);
            %plotData = 1-(abs(angle(plotData))./pi);
        end
        if diag == 0;
            plotData = tril(plotData,-1);
        end
        imagesc(plotData);
        title(['ave ' depMeasures ': ' behavior ' files ' firstFile '-' lastFile ', ch ' num2str(shanks{k}(1)) '-' num2str(shanks{k}(end)) ],'fontsize',7);
        set(gca,'xtick',[1:length(shanks{k})],'xticklabel',shanks{k},'ytick',[1:length(shanks{k})],'yticklabel',shanks{k},'fontsize',5);
        %cLimits = [min(min(min(aveDepVar))) 0.7];
        %cLimits = [0.3 0.7];
        %set(gca,'clim',cLimits);
        %set(gca,'clim',[0 1]);
        colorbar;

        if saveFigBool
            print([depMeasure '_' behavior num2str(allChans(1)) '-' num2str(allChans(end))], '-dpng', '-r125');
            %print(['SFNposter2005/' depMeasure '_' behavior '_ch' num2str(allChans(1)) '-' num2str(allChans(end)) '_Ave' num2str(fo(1)) '-' num2str(fo(end)) 'Hz'], '-depsc', '-adobecset')
        else
            keyboard
        end
    end

        
    %% For Specified Frequencies Separately %%
    %% for shanks individually %%
    figure(3)
    for k=1:length(shanks)
        clf;
        for i=1:length(frequencies)
            subplot(ceil(sqrt(length(frequencies))),ceil(sqrt(length(frequencies))),i)
            lb=frequencies(i);
            hb=lb+1;
            plotData = squeeze(mean(aveDepVar(find(fo>lb & fo<hb),shanks{k},shanks{k}),1));
            if strcmp(depMeasure,'coh') | strcmp(depMeasure,'csd')
                if onlyreal == 0
                    plotData = abs(plotData);
                else
                    plotData = real(plotData);
                end
            end
            if strcmp(depMeasure,'phase')
                plotData = angle(plotData);
                %plotData = 1-(abs(angle(plotData))./pi);
            end
            if diag == 0;
                plotData = tril(plotData,-1);
            end
            imagesc(plotData);
            title([depMeasure ': ' behavior ' files ' firstFile '-' lastFile ', ch ' num2str(shanks{k}(1)) '-' num2str(shanks{k}(end)) ', freq=' num2str(lb)],'fontsize',7);
            set(gca,'xtick',[1:length(shanks{k})],'xticklabel',shanks{k},'ytick',[1:length(shanks{k})],'yticklabel',shanks{k},'fontsize',5);
            %set(gca,'clim',[0 1]);
            colorbar;
        end
        if saveFigBool
            print([depMeasure '_' behavior num2str(shanks{k}(1)) '-' num2str(shanks{k}(end))], '-dpng', '-r125');
        else
            keyboard
        end
    end
    
    %% for all Channels %%
    figure(3)
    for i=1:length(frequencies)
        clf;
        lb=frequencies(i);
        hb=lb+1;
        plotData = squeeze(mean(aveDepVar(find(fo>lb & fo<hb),allChans,allChans),1));
        if strcmp(depMeasure,'coh') | strcmp(depMeasure,'csd')
            if onlyreal == 0
                plotData = abs(plotData);
            else
                plotData = real(plotData);
            end
        end
        if strcmp(depMeasure,'phase')
            plotData = angle(plotData);
            %plotData = 1-(abs(angle(plotData))./pi);
        end
        if diag == 0;
            plotData = tril(plotData,-1);
        end
        imagesc(plotData);
        title([depMeasure ': ' behavior ' files ' firstFile '-' lastFile ', ch ' num2str(allChans(1)) '-' num2str(allChans(end)) ', freq=' num2str(lb)],'fontsize',7);
        set(gca,'xtick',[allChans(1:2:length(allChans))],'xticklabel',[allChans(1:2:length(allChans))],'ytick',[allChans(1:2:length(allChans))],'yticklabel',[allChans(1:2:length(allChans))],'fontsize',4);
        %set(gca,'clim',[0 1]);
        colorbar;
        if saveFigBool
            %print(['SFNposter2005/' depMeasure '_' behavior '_ch' num2str(allChans(1)) '-' num2str(allChans(end)) '_' num2str(frequencies(i)) 'Hz'], '-depsc', '-adobecset')
            print([depMeasure '_' behavior num2str(allChans(1)) '-' num2str(allChans(end)) '_' num2str(frequencies(i)) 'Hz'], '-dpng', '-r150');
        else
            keyboard
        end
    end
end
