function regaafiltpowcsdbhv(filebase,timewindow,eegchdata,eegfiltdata,eegpowdata,csdchdata,csdfiltdata,csdpowdata)

%eegchdata = readmulti([filebase '.eeg' ], nchannels, channel);
eegwinheight = [mean(eegchdata)-3*std(eegchdata) mean(eegchdata)+3*std(eegchdata)];
csdwinheight = [mean(csdchdata)-3*std(csdchdata) mean(csdchdata)+3*std(csdchdata)];  
eegpowwinheight = [min(eegpowdata) max(eegpowdata)];
csdpowwinheight = [min(csdpowdata) max(csdpowdata)];
if ~exist('timewindow', 'var'),
    timewindow = 1; % in seconds
end
timewindow = ceil(timewindow*1250/2); % convert to eeg samples and divide by 2
 
whldata = load([filebase '.whl']);
eegsamp = 1250; % samples/sec
whlsamp = 39.0625; % samples/sec
figure(10);
cla;

[whlm,n]=size(whldata);
[eegm,n]=size(eegchdata);

factor = whlm/eegm;

if (length(eegfiltdata) ~= eegm | length(eegpowdata) ~= eegm | length(csdchdata) ~= eegm | length(csdfiltdata) ~= eegm | length(csdpowdata) ~= eegm) , ERROR_file_sizes_do_not_match
end

j=1+timewindow; % j counted in eeg samples
step=10;
while ((j<eegm) & (ceil(j*factor)<whlm))

    cla;
    subplot(4,2,1);
    plot(whldata(ceil(j*factor),1), whldata(ceil(j*factor),2),'.','color',[1 0 0],'markersize',25,'linestyle','none');
    set(gca,'xlim',[0 368],'ylim',[0 240]);
    
    % eeg trace
    subplot(4,2,2); 
    cla;
    plot([j-timewindow:j+timewindow]./eegsamp, eegchdata(j-timewindow:j+timewindow));
    hold on;   
    plot([j-timewindow:j+timewindow]./eegsamp, eegfiltdata(j-timewindow:j+timewindow),'color',[1 0 0]);

    for i=1:9
       plot(([j-timewindow j-timewindow]+i*timewindow/5)/eegsamp, eegwinheight,':', 'color' , [0 0 0]);
    end
    plot([j j]./eegsamp,eegwinheight,'color',[1 0 0]);
    set(gca,'xlim',[(j-timewindow) (j+timewindow)]./eegsamp,'ylim', eegwinheight);
    
    % eeg power trace
    subplot(4,2,4); 
    cla;
    plot([j-timewindow:j+timewindow]./eegsamp, eegpowdata(j-timewindow:j+timewindow));
    hold on;
    for i=1:9
       plot(([j-timewindow j-timewindow]+i*timewindow/5)/eegsamp, eegpowwinheight,':', 'color' , [0 0 0]);
    end
    plot([j j]./eegsamp,eegpowwinheight,'color',[1 0 0]);
    set(gca,'xlim',[(j-timewindow) (j+timewindow)]./eegsamp,'ylim', eegpowwinheight);
    
    % csd trace
    subplot(4,2,6); 
    cla;
    plot([j-timewindow:j+timewindow]./eegsamp, csdchdata(j-timewindow:j+timewindow));
    hold on;   
    %plot([j-timewindow:j+timewindow]./eegsamp,
    plot([j-timewindow:j+timewindow]./eegsamp, csdfiltdata(j-timewindow:j+timewindow),'color',[1 0 0]);

    for i=1:9
       plot(([j-timewindow j-timewindow]+i*timewindow/5)/eegsamp, csdwinheight,':', 'color' , [0 0 0]);
    end
    plot([j j]./eegsamp,csdwinheight,'color',[1 0 0]);
    set(gca,'xlim',[(j-timewindow) (j+timewindow)]./eegsamp,'ylim', csdwinheight);
    
    % csd power trace
    subplot(4,2,8); 
    cla;
    plot([j-timewindow:j+timewindow]./eegsamp, csdpowdata(j-timewindow:j+timewindow));
    hold on;
    for i=1:9
       plot(([j-timewindow j-timewindow]+i*timewindow/5)/eegsamp, csdpowwinheight,':', 'color' , [0 0 0]);
    end
    plot([j j]./eegsamp,csdpowwinheight,'color',[1 0 0]);
    set(gca,'xlim',[(j-timewindow) (j+timewindow)]./eegsamp,'ylim', csdpowwinheight);
    
    
   
    i = input('how far to step (in seconds)?');
    if (i==[]),
        j = j+step;
    else
        if (i=='t'),
            i = input('what time window would you like (in seconds)?');
            timewindow = ceil(i*1250/2);
            j = max(j, 1+timewindow); % make sure timewindow doesn't run below the beginning of our matrices
        else         
            step = ceil(i*1250);
            j = j+step;
        end
    end
end


