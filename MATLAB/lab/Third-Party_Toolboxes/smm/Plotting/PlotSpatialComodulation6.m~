function PlotSpatialComodulation6(taskType,fileExt,fileNameFormat,chanMat,badchan,winLength,NW,thetaFreq,gammaFreq,binSize,smoothRad)

occupThresh = 10;
plotAnatBool = 1;
%smoothRad = 8;

inName = ['SpatialComod_' taskType fileExt '_Win' num2str(winLength) '_NW' num2str(NW) '_' ...
    num2str(thetaFreq(1)) '-' num2str(thetaFreq(2)) 'Hz_vs_' num2str(gammaFreq(1)) '-' num2str(gammaFreq(2)) ...
    'Hz_grid_' num2str(binSize) '.mat']

load(inName)


figTitle = ['SpatialComod_' taskType fileExt '_win' num2str(winLength) 'NW' num2str(NW) '_' num2str(thetaFreq(1)) '-' num2str(thetaFreq(2)) ...
    'Hz_vs_' num2str(gammaFreq(1)) '-' num2str(gammaFreq(2)) 'Hz'];


figure(1)
clf
set(gcf,'name',figTitle)
hold on;


fileBaseMat = getfield(spatialComodStruct,'info','fileBaseMat');
spatialComodData = getfield(spatialComodStruct,'spatialComodData');
spatialSlopes = getfield(spatialComodStruct,'spatialSlopes');
spatialRSquare = getfield(spatialComodStruct,'spatialRSquare');
spatialPvalues = getfield(spatialComodStruct,'spatialPvalues');
nPoints = getfield(spatialComodStruct,'nPoints');
whlTimes = getfield(spatialComodStruct,'whlTime');
spectTimes = getfield(spatialComodStruct,'spectTime');
fileNames = getfield(spatialComodStruct,'fileName');
whlFs = getfield(spatialComodStruct,'info','whlFs');
videoRes = getfield(spatialComodStruct,'info','videoRes');
gridYoffset = getfield(spatialComodStruct,'info','gridYoffset');


for i=1:size(fileBaseMat,1)
    whldat = LoadMazeTrialTypes(fileBaseMat(i,:));
    notMinusOnes = whldat(:,1)~=-1;    

    plot(whldat(notMinusOnes,1),whldat(notMinusOnes,2),'.','color',[0.5 0.5 0.5]);
    for m=1:binSize:videoRes(1)
        plot([m,m],[0,videoRes(2)])
    end
    for n=gridYoffset:binSize:videoRes(2)
        plot([videoRes(1),0],[n,n])
    end
end

for i=1:size(fileBaseMat,1)
    whldat = LoadMazeTrialTypes(fileBaseMat(i,:));
    wholeMaze = LoadMazeTrialTypes(fileBaseMat(i,:),[],[1 1 1 1 1 1 1 1 1]);
    notMinusOnes = whldat(:,1)~=-1;
    for m=1:ceil(videoRes(1)/binSize)
        for n=1:ceil(videoRes(2)/binSize)
            indexes = find(strcmp(mat2cell(fileNames{m,n},ones(size(fileNames{m,n},1),1),size(fileNames{m,n},2)), fileBaseMat(i,:)));
            plot(whldat(whlTimes{m,n}(indexes),1),whldat(whlTimes{m,n}(indexes),2),'.');
            
            for j=1:length(indexes)
                try plotWhl = [wholeMaze(round(spectTimes{m,n}(indexes(j),1)*whlFs+1):min(length(wholeMaze),round(spectTimes{m,n}(indexes(j),2)*whlFs+1)),1),...
                        wholeMaze(round(spectTimes{m,n}(indexes(j),1)*whlFs+1):min(length(wholeMaze),round(spectTimes{m,n}(indexes(j),2)*whlFs+1)),2)];
                catch
                    keyboard
                end
                plot(plotWhl(plotWhl(:,1)~=-1,1),plotWhl(plotWhl(:,1)~=-1,2),'r:')
            end    
        end
    end
end

%keyboard

newNPoints = NaN*zeros(size(spatialComodData,1),size(spatialComodData,2));
newSpatialSlopes = NaN*zeros(size(spatialSlopes));
newSpatialRSquare = NaN*zeros(size(spatialRSquare));
newSpatialPvalues = NaN*zeros(size(spatialPvalues));
%goodIndexes = zeros(size(spatialComodData,1),size(spatialComodData,2));
for m=1:size(spatialComodData,1)
    for n=1:size(spatialComodData,2)
        if size(spatialComodData{m,n},3)>=occupThresh
            newNPoints(m,n) = size(spatialComodData{m,n},3);
            newSpatialSlopes(m,n,:) = spatialSlopes(m,n,:);
            newSpatialRSquare(m,n,:) = spatialRSquare(m,n,:);
            newSpatialPvalues(m,n,:) = spatialPvalues(m,n,:);

        end
        %if size(spatialComodData{m,n},3) ~=1
        %    npoints(m,n) = size(spatialComodData{m,n},3);
        %end
    end
end
%smoothLen = 1;
%plot_low_thresh = 0.1
%    smooth_npoints = Smooth(npoints, smoothLen); % smooth position data
%    norm_smooth_pos_sum = smooth_npoints/sum(sum(smooth_npoints));
%    norm_plot_low_thresh = plot_low_thresh/sum(sum(smooth_npoints));
 %   [below_thresh_indexes] = find(norm_smooth_pos_sum<=norm_plot_low_thresh);
    %[above_thresh_x above_thresh_y] = find(norm_smooth_pos_sum>norm_plot_low_thresh);
 %   smooth_pos_sum_nan = smooth_npoints;
 %   smooth_pos_sum_nan(below_thresh_indexes)= NaN;
figure(2)
clf
subplot(1,3,1)
imagesc(nPoints)
set(gcf,'name',figTitle)
cLimits = get(gca,'clim');
set(gca,'clim',[0 cLimits(2)]);
colorbar
title('All Pixels')

figure(2)
subplot(1,3,2)
%[m,n] = find(goodIndexes);
imagesc(newNPoints)
set(gca,'clim',[0 cLimits(2)]);
colorbar
title(['Pixels > ' num2str(occupThresh)])

figure(2)
subplot(1,3,3)
imagesc(SmoothSkipNaN(SmoothSkipNaN(newNPoints,smoothRad,0),smoothRad,1))
set(gca,'clim',[0 cLimits(2)]);
colorbar
title(['Smooth: rad=' num2str(smoothRad)])

[x,y,z] = size(chanMat);
for i=1:x
    for j=1:y
        for k=1:z
            if isempty(find(badchan==chanMat(i,j,k)))
    %[m1 n1] = find(~isnan(spatialCorrCoefs(:,:,channels(j),2,1)));
    %figureCell{i,j,k} = Smooth(newSpatialCorrCoefs(:,:,channels(j),2,1).*npoints,smoothLen)./smooth_pos_sum_nan;
    %figureCell{j} = spatialCorrCoefs(:,:,channels(j),2,1);
    
figureCell{i,j,k} = TrimBorderNaNs(SmoothSkipNaN(SmoothSkipNaN(newSpatialSlopes(:,:,chanMat(i,j,k)),smoothRad),2);
figureCell2{i,j,k} = TrimBorderNaNs(SmoothSkipNaN(SmoothSkipNaN(newSpatialRSquare(:,:,chanMat(i,j,k)),smoothRad),2);
    %figureCell{i,j,k} = TrimBorderNaNs(SmoothSkipNaN(spatialCorrCoefs(:,:,chanMat(i,j,k),2,1).*SmoothSkipNaN(npoints,smoothRad),smoothRad)./SmoothSkipNaN(npoints,smoothRad),2);
figureCell3{i,j,k} = log10(SmoothSkipNaN(TrimBorderNaNs(newSpatialPvalues(:,:,chanMat(i,j,k)),2),smoothRad));
    %figure(1)
     %ImageScRmNaN(spatialCorrCoefs(:,:,channels(j),2,1),[-1 1],[0 0 1]);
            end
        end
    end
end

outText = {taskType,fileExt,GetFileNamesInfo(fileBaseMat,fileNameFormat),['win=' num2str(winLength)], ['NW=' num2str(NW)],...
    [num2str(thetaFreq(1)) '-' num2str(thetaFreq(2)) 'Hz'],[num2str(gammaFreq(1)) '-' num2str(gammaFreq(2)) 'Hz'],...
    ['bin=' num2str(binSize)],['smoothRad=' num2str(smoothRad)]};

figure(3)
clf
axesHandles = XYFImageScRmNaN(figureCell,[-.6 .6], 1,[gcf],[0 0 1]);
XYSetAxesProperties('set(gca,''xtick'',[],''ytick'',[])',axesHandles);
set(gcf,'name',figTitle)
yLimits = get(gca,'ylim');
xLimits = get(gca,'xlim');
text(0,yLimits(2)+round(yLimits(2)),cat(2,{'Slope'},outText)),
figure(4)
clf
axesHandles = XYFImageScRmNaN(figureCell2,[0 .3], 1,[gcf],[0 0 1]);
XYSetAxesProperties('set(gca,''xtick'',[],''ytick'',[])',axesHandles);
set(gcf,'name',figTitle)
text(0,yLimits(2)+round(yLimits(2)),cat(2,{'rSquare'},outText)),

figure(5)
clf
axesHandles = XYFImageScRmNaN(figureCell3,[log10([1,0.05])], 1,[gcf],[0 0 1]);
XYSetAxesProperties('set(gca,''xtick'',[],''ytick'',[])',axesHandles);
set(gcf,'name',figTitle)
text(0,yLimits(2)+round(yLimits(2)),cat(2,{'p Values'},outText)),



return





for j=1:length(channels)
    subplot(1,length(channels),j)
    figure(2)
    imagesc(figureCell{j})
    %set(gca,'clim',[-.5 .5]);
    colorbar
end
%ImageScRmNaN(spatialCorrCoefs(:,:,channels(j),2,1),[-1 1],[0 0 1]);


npoints = zeros(size(spatialComodData,1),size(spatialComodData,4))
for m=1:size(spatialComodData,1)
    for n=1:size(spatialComodData,2)
        npoints(m,n) = size(spatialComodData{m,n},3);
    end
end
npoints

for k=1:size(mazeRegionsWhlDat,1)
    if exist('wholeMazeComodData','var')
        wholeMazeComodData = cat(1, wholeMazeComodData, comodData{k});
        %wholeMazeComodData(:,channels(j),2) = cat(1, wholeMazeComodData(:,channels(j),2), comodData{k}(:,channels(j),2));
    else
        wholeMazeComodData = comodData{k};
        %wholeMazeComodData(:,channels(j),2) = comodData{k}(:,channels(j),2);
    end
end

for j=1:length(channels)
    for k=1:size(mazeRegionsWhlDat,1)

        [corrCoefs(k,:,:,channels(j)), corrPvalues(k,:,:,channels(j))] = corrcoef(comodData{k}(:,channels(j),1),comodData{k}(:,channels(j),2));
    end
    [wholeMazeCorrCoefs(:,:,channels(j)) wholeMazeCorrPvalues(:,:,channels(j))] = corrcoef( wholeMazeComodData(:,channels(j),1),  wholeMazeComodData(:,channels(j),2));
end

for k=1:size(mazeRegionsWhlDat,1)
    corrCoefsPlotMats(k,:,:) = Make2DPlotMat(corrCoefs(k,2,1,:),chanMat);
    corrPvaluesPlotMats(k,:,:) = Make2DPlotMat(log10(corrPvalues(k,2,1,:)),chanMat);
end
wholeMazeCorrCoefsPlotMat = Make2DPlotMat(wholeMazeCorrCoefs(2,1,:),chanMat);
wholeMazeCorrPvaluesPlotMat = Make2DPlotMat(log10(wholeMazeCorrPvalues(2,1,:)),chanMat);   

 if plotAnatBool
    anatOverlayName = [fileBaseMat(1,1:6) 'AnatCurves.mat'];
    anatLineWidth = 3;
    if strcmp(fileExt,'.eeg')
        plotOffset = [0 0];
    end
    if strcmp(fileExt,'.csd1') | strcmp(fileExt,'.csd.1')
        plotOffset = [1 0];
    end
    if strcmp(fileExt,'.csd121') | strcmp(fileExt,'.csd.121')
       plotOffset = [2 0];
    end
    %plotOffset
    %plotOffset(2) = 2;
    plotSize = [16.5,6.5];
    %plotSize = size(chanMat) + plotOffset.*2;
else
    anatOverlayName = [];
end


badChanMask = ~isnan(Make2DPlotMat(ones(size(corrCoefs(1,2,1,:))),chanMat,badchan));
figure(100)
clf
for k=1:size(mazeRegionsWhlDat,1)
    figureMats{k} = corrCoefsPlotMats(k,:,:);
    subplotTitles{k} = [mazeRegionNames{k} ' corrCoef'];
    if plotAnatBool  
        anatOverlayCell{k} = anatOverlayName;
    end
end
axesHandles = XYFImageScMask(figureMats,badChanMask,[-.5 .5],0,gcf,[1 0 1]); 
XYTitle(subplotTitles,axesHandles);
if plotAnatBool
    XYPlotAnatCurves(anatOverlayCell,  axesHandles,plotSize,[plotOffset],[],anatLineWidth);
end                

figure(101)
clf
for k=1:size(mazeRegionsWhlDat,1)
    figureMats{k} = corrPvaluesPlotMats(k,:,:);
    subplotTitles{k} = [mazeRegionNames{k} ' pVal'];
    if plotAnatBool  
        anatOverlayCell{k} = anatOverlayName;
    end
end
axesHandles = XYFImageScMask(figureMats,badChanMask,[log10(0.01) log10(0.02)],0,gcf,[1 0 1]);
XYTitle(subplotTitles,axesHandles);
if plotAnatBool
    XYPlotAnatCurves(anatOverlayCell,  axesHandles,plotSize,[plotOffset],[],anatLineWidth);
end    
set(gcf,'name','CalcComodulation2');

figure(102)
clf
subplot(1,2,1)
figureMats = wholeMazeCorrCoefsPlotMat;
subplotTitles = ['whole maze corr coef'];
if plotAnatBool
    anatOverlayCell = {anatOverlayName};
end
axesHandles = ImageScMask(figureMats,badChanMask,[-.25 .25],[1 0 1]);
title(subplotTitles);
if plotAnatBool
    PlotAnatCurves(anatOverlayName,  plotSize,[plotOffset],[],anatLineWidth);
end    
set(gcf,'name','CalcComodulation2');

subplot(1,2,2)
figureMats = wholeMazeCorrPvaluesPlotMat;
subplotTitles = ['whole maze corr coef'];
axesHandles = ImageScMask(figureMats,badChanMask,[log10(0.05) log10(0.01)],[1 0 1]);
title(subplotTitles);
if plotAnatBool
    PlotAnatCurves(anatOverlayName,  plotSize,[plotOffset],[],anatLineWidth);
end    
set(gcf,'name','CalcComodulation2');



figure(103)
clf
plotChan = [49:64];
colors = [1 0 0;0 0 1; 0.5 0.5 0.5; 0 0 0];

for k=1:size(mazeRegionsWhlDat,1)
    for j=1:length(plotChan)
        subplot(size(mazeRegionsWhlDat,1)+1,length(plotChan),(k-1)*length(plotChan)+j)
        if j==1
            ylabel(mazeRegionNames{k})
        end

        plot(comodData{k}(:,plotChan(j),1),comodData{k}(:,plotChan(j),2),'.');
        set(gca,'xlim',[45 65],'ylim',[34 55]);

        subplot(size(mazeRegionsWhlDat,1)+1,length(plotChan),size(mazeRegionsWhlDat,1)*length(plotChan)+j)
        if j==1
            ylabel('whole maze')
        end

        hold on
        plot(comodData{k}(:,plotChan(j),1),comodData{k}(:,plotChan(j),2),'.','color',colors(k,:));
        
        set(gca,'xlim',[45 65],'ylim',[34 55]);

    end
end
return

















subplot(1,2,2)
figureMats = centerArmPPowMat;
subplotTitles = {[ ' center arm p ']};
axesHandles = ImageScMask(figureMats,badChanMask,[],[1 0 1]); 
XYTitle(subplotTitles,axesHandles);
if plotAnatBool
    XYPlotAnatCurves({anatOverlayName},  axesHandles,plotSize,[plotOffset],[],anatLineWidth);
end                


subplotTitles = {[taskType ' z ' mazeRegions{1}],[taskType ' z ' mazeRegions{2}], ...
          [taskType ' z ' mazeRegions{3}],[taskType ' z ' mazeRegions{4}]};
figure(4)
%cl
colorLimits = [-1.3 1.3];
%colorLimits = [-.75 .75];
axesHandles = XYFImageScMask(figureMats,badChanMask,[colorLimits],1,gcf,[1 0 1]); 
XYTitle(subplotTitles,axesHandles);
if plotAnatBool
    XYPlotAnatCurves({anatOverlayName, anatOverlayName,...
                      anatOverlayName, anatOverlayName},  axesHandles,plotSize,[plotOffset],[],anatLineWidth);
end  



figure(10+j)
clf
subplot(3,3,5)
plot(centerArmComodData(:,3),centerArmComodData(:,4),'.')
subplot(3,3,9)
plot(rReturnArmComodData(:,3),rReturnArmComodData(:,4),'.')
subplot(3,3,7)
plot(lReturnArmComodData(:,3),lReturnArmComodData(:,4),'.')
subplot(3,3,3)
plot(rGoalArmComodData(:,3),rGoalArmComodData(:,4),'.')
subplot(3,3,1)
plot(lGoalArmComodData(:,3),lGoalArmComodData(:,4),'.')
subplot(3,3,2)
plot(TjunctionComodData(:,3),TjunctionComodData(:,4),'.')
centerArmComodData = [];
rReturnArmComodData = [];
lReturnArmComodData = [];
rGoalArmComodData = [];
lGoalArmComodData = [];
TjunctionComodData = [];

end
