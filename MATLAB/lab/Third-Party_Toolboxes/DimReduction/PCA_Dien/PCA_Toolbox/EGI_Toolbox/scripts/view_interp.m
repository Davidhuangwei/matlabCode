function status = view_interp(color_map,clims,contour_array,contour_array2,title_text,image_labels)%status = view_interp(color_map,clims,contour_array,contour_array2,image_labels)%%view interpolation binary with header%%color_map = what it says%clims = colormap limits (optional)%contour_array = first contour array (gets a solid blue contour line) %contour_array2 = second contour array (gets a dashed red line).%title_text = title of plot%image_labels = 'labels corresponding to individual images.   figure[fname,pathname] = uigetfile('*.*','Select image file:');fid = fopen([pathname fname],'rb');nrow = fread(fid,1,'float');ncolumn = fread(fid,1,'float');plot_res = fread(fid,1,'float');interp = fread(fid,[ncolumn,nrow],'float');interp = interp';if nargin == 1clims(2) = 0.9*max(max(interp));clims(1) = 0.9*min(min(interp));end;imagesc(interp,clims), colormap(color_map), shading interphold onif (nargin ==2|nargin == 1)contour(interp)elseif nargin == 3contour(interp,contour_array,'k-')elseif nargin > 3contour(interp,contour_array,'k-');contour(interp,contour_array2,'w--');end;axis('off')if nargin >= 5	title(title_text);end;if nargin == 6	if size(image_labels,1) == nrow*ncolumn/plot_res/plot_res		icount = 1;		nrow = nrow/plot_res;		ncolumn = ncolumn/plot_res;		for j = nrow:-1:1			for i = 1:ncolumn				text((i-1)*plot_res+fix(plot_res/3),nrow*plot_res-3 -(j-1)*plot_res,image_labels(icount,:))				icount = icount + 1;					end		end	nrow = nrow*plot_res;	ncolumn = ncolumn*plot_res;	else		disp('WARNING:improper number of labels')		disp('WARNING:improper number of labels')	endend if (nrow/plot_res == 1 &ncolumn/plot_res == 1)	[xelec,yelec,zelec] = electrodes(129);	ruu = sqrt(xelec(1)^2+yelec(1)^2+zelec(1)^2);	[xs,ys,zs] = polgrid(plot_res,ruu);	elecs = xyz2tp(xelec,yelec,zelec);	elec_dot = zeros(129,2);	for ij = 1:129		xt = xelec(ij)*ones(size(xs,1),size(xs,2));		yt = yelec(ij)*ones(size(xs,1),size(xs,2));		zt = zelec(ij)*ones(size(xs,1),size(xs,2));	dt = (xt - xs).^2 + (yt - ys).^2 +(zt - zs).^2;	[k1 k2] = find(dt == min(min(dt)));	elec_dot(ij,:) = [k1(1) k2(1)];	endplot(elec_dot(:,2),elec_dot(:,1),'ko')endcolorbarfclose(fid);status = 1;