function average_spectrum(obs,newobs_labels,infname,outfname)infid = [];outfid = [];if nargin < 2	error('insufficient arguments')endif (size(newobs_labels,1) ~= size(obs,1))	error('mismatch between number of output obs and obs_labels')endif nargin < 3	[infid, infname] = get_fid('rb');	[outfid, outfname] = put_fid('wb');endif (nargin < 4 & isempty(outfname))	[outfid,outfname] = put_fid('wb');endif isempty(infname)	[infid, infname] = get_fid('rb');endif isempty(outfname)	[outfid,outfname] = put_fid('wb');end;if isempty(infid)	infid = fopen(infname,'rb');endif isempty(outfid)	outfid = fopen(outfname,'wb');endversion = fread(infid,1,'int16');[nfiles,obs_labels,Epoch,Window_Length,NEpoch,Nbad_chan,bad_chan,ref_flag,reference,NChan,NFreq] = rd_anal_hdr(infid);outnfiles = size(obs,1);outWindow_Length = Window_Length(1:size(obs,1));outEpoch(1:size(obs,1)) = Epoch(1:size(obs,1));outNEpoch(1:size(obs,1)) = NEpoch(1:size(obs,1));outNChan(1:size(obs,1)) = NChan(1:size(obs,1));outNFreq(1:size(obs,1)) = NFreq(1:size(obs,1));for i = 1:size(obs,1)outref_flag(i) = ref_flag(obs(i,1));outreference(i,:) = reference(obs(i,1),:);end;outbad_chan = zeros(size(obs,1),129);for i = 1:size(obs,1)	stack = zeros(1,129);	for j = 1:size(find(obs(i,:)))			masky = ones(1,129);			masky(bad_chan(obs(i,j),1:Nbad_chan(obs(i,j)))) = zeros(1,Nbad_chan(obs(i,j)));			stack = stack + masky;	end;	obs_bad_chan = find(stack < 0.5*max(stack));	outbad_chan(i,1:length(obs_bad_chan)) = obs_bad_chan;	outNbad_chan(i) = length(obs_bad_chan);end;%write new headerfwrite(outfid,version,'int16');fwrite(outfid,size(obs,1),'int16');fwrite(outfid,size(newobs_labels,2),'int16');for i = 1:size(newobs_labels,1)	fwrite(outfid,newobs_labels(i,:),'char');end;fwrite(outfid,outEpoch,'int16');fwrite(outfid,outWindow_Length,'int16');fwrite(outfid,outNEpoch,'int16');	fwrite(outfid,outNbad_chan,'int16');fwrite(outfid,outbad_chan,'int16');fwrite(outfid,outref_flag,'int16');fwrite(outfid,outreference,'char');		fwrite(outfid,outNChan,'int16');fwrite(outfid,outNFreq,'int16');	obs_masky = zeros(size(obs,1),nfiles);for i = 1:size(obs,1)	obs_masky(i,obs(i,find(obs(i,:)))) = ones(1,length(find(obs(i,:))));end;for i = 1:size(obs,1)eval(['avg' int2str(i) ' = zeros(outNFreq(i),outNChan(i));']);eval(['stack' int2str(i)  ' = zeros(1,129);']);end;for i = 1:nfiles	obs_trial = fread(infid,[NChan(i),NFreq(i)],'float');	obs_trial = obs_trial';	for j = 1:size(obs,1)		if obs_masky(j,i)			eval(['avg' int2str(j) ' = avg' int2str(j) ' + obs_trial;']);			masky = ones(1,129);			masky(bad_chan(i,1:Nbad_chan(i))) = zeros(1,Nbad_chan(i));			eval(['stack' int2str(j) ' = stack' int2str(j) ' + masky;']);		end;	end;end;if version == -3	for i= 1:size(obs,1)		eval(['avg' int2str(i) '(:,find(stack' int2str(i) ')) = avg' int2str(i) '(:,find(stack' int2str(i) '))./(ones(size(obs_trial,1),1)*stack' int2str(i) ');']);		eval(['numbytes = fwrite(outfid,avg' int2str(i) ''',''float'');']);	end;else	cross_stack = ones(1,8385);	ch_pair_indices;	for i = 1:size(obs,1)		for j = 1:129			for k = j:129				eval(['cross_stack(chpair(j,k)) = min([stack' int2str(i) '([j k])]);']);			end		end;		eval(['avg' int2str(i) '(:,find(cross_stack)) = avg' int2str(i) '(:,find(cross_stack))./(ones(size(obs_trial,1),1)*cross_stack);']);		eval(['fwrite(outfid,avg' int2str(i) ''',''float'');']);	end;end;fclose('all')	