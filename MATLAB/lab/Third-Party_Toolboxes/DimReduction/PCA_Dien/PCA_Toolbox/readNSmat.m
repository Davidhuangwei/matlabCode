function [data, indexdata] = readNSmat(NSmatfile, PCAmode, start_samp, last_samp, start_base, last_base, cellList);% readEGISave - [data, indexdata] = readNSmat(NSmatfile, PCAmode, start_samp, last_samp, start_base, last_base, cellList - read in NS mat file%Inputs%  NSmatfile	: Name of the NS mat file.  Accepts a .mat file saved by NetStation using the 'data volume' option.%                   Assumes all segments have the same number of channels and timepoints.%  PCAmode	: Format for output data ('temp': time points as columns; 'spat': channels as columns)%%  OPTIONAL%  start_samp: First time point to be retained in (must include the baseline samples)%  last_samp: Last time points to be included%  start_base: First time point to be included in baseline (set to zero to disable.  This option allows data to be baselined as it is read in).%              Specify baseline points according to start/stop samples (e.g., start-stop samples could be 100 to 250 and baseline could be 100 to 150).%  last_base: Last time points to be included in baseline%  cellList: List of cells to be included.  For example, [1 2 5 6]%%Outputs%  data		: The data.  See PCAmode for format.%  indexdata: Desciptor of the data rows.  First column is output cell, second is the subject, third is the channel or timepoint.%%History%  Matlab 6.5%  by Joseph Dien (4/14/03)%  Tulane University%  jdien@tulane.edu%if nargin < 2  help readNSmat    returnendif nargin < 3  start_samp = 1;endif nargin < 4  last_samp = 0;endif nargin < 5  start_base = 0;endif nargin < 6  last_base = 0;endeval(['load ' NSmatfile ]);numCells = 0;lastCell = '';cellIndex = [];for i = 1:size(EGIData,2)    name = EGIData{2,i};    segStart=findstr('_Segment',name);    if ~strcmp(lastCell,name(1:segStart-1))        numCells = numCells +1;        cellIndex=[cellIndex; i];   %determine where each new cell starts.        lastCell = name(1:segStart-1);    end;end;cellIndex=[cellIndex; size(EGIData,2)+1];  if nargin < 7  cellList = [1:numCells];else  numCells = size(cellList,2);end;if last_samp == 0	last_samp = size(EGIData{1,1},2);   %Makes assumption that all segments are the same length as the first.end;if last_samp > size(EGIData{1,1},2)	error('last sample is specified to be larger than the length of the segments');end;baselength = last_base - start_base+1;if start_base == 0	baselength = 0;end;if baselength < 0 	error('baseline period is less than zero');endnumSamps = last_samp-start_samp+1;numChans = size(EGIData{1,1},1);numTrials= size(EGIData,2);if PCAmode == 'temp'	numObs = numTrials * numChans;	data = zeros(numObs,numSamps);elseif PCAmode == 'spat'	numObs = numTrials * numSamps;	data = zeros(numObs,numChans);else	error('PCAmode must be set to either temp or spat');end;indexdata = zeros(numTrials,3);currentRow = 0;for cellLoop = 1:numCells    cell=cellList(cellLoop);	for trialSubj = 1:(cellIndex(cell+1)-cellIndex(cell))        name = EGIData{2,cellIndex(cell)};        segStart=findstr('_Segment',name);		disp([num2str([cell trialSubj]) ' ' name(1:segStart-1)])		if PCAmode == 'temp'            oneTrData = EGIData{1,cellIndex(cell)+trialSubj-1};            oneTrData = oneTrData(:, start_samp:last_samp);			if baselength > 0				oneTrData = oneTrData - (ones(size(oneTrData,1),1) * mean(oneTrData(1+start_base-start_samp:last_base-start_samp,:)));			end;			for i = 1:numChans				currentRow = currentRow +1;				data(currentRow,:) = oneTrData(i,:);				indexdata(currentRow,:) = [cellLoop trialSubj i];			end;		elseif PCAmode == 'spat'            oneTrData = EGIData{1,cellIndex(cell)+trialSubj-1};            oneTrData = oneTrData(:, start_samp:last_samp);			if baselength > 0				oneTrData = oneTrData - (ones(size(oneTrData,1),1) * mean(oneTrData(1+start_base-start_samp:last_base-start_samp,:)));			end;			for i = 1:numSamps				currentRow = currentRow +1;				data(currentRow,:) = oneTrData(:,i)';				indexdata(currentRow,:) = [cellLoop trialSubj i];			end;		end;	end;end;