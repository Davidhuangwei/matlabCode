cnames = char(...	'CS1',...	'CS2',...	'CD1',...	'CD2',...	'HS1',...	'HS2',...	'HD1',...	'HD2',...	'ES1',...	'ES2',...	'ED1',...	'ED2',...	'S1',...	'S2',...	'D1',...	'D2',...	'S',...	'D',...	'1',...	'2',...	'CS',...	'HS',...	'ES');	cellcoll = [...	1 0 0 0 0 0;...	2 0 0 0 0 0;...	3 0 0 0 0 0;...	4 0 0 0 0 0;...	5 0 0 0 0 0;...	6 0 0 0 0 0;...	7 0 0 0 0 0;...	8 0 0 0 0 0;...	9 0 0 0 0 0;...	10 0 0 0 0 0;...	11 0 0 0 0 0;...	12 0 0 0 0 0;...	1 5 9 0 0 0;...	2 6 10 0 0 0;...	3 7 11 0 0 0;...	4 8 12 0 0 0;...	1 2 5 6 9 10;...	3 4 7 8 11 12;...	1 3 5 7 9 11;...	2 4 6 8 10 12;...	1 2 0 0 0 0;...	5 6 0 0 0 0;...	9 10 0 0 0 0];ename = 'SDA';PCAmode = 'spat';   %mode of second PCA (spatial for temporospatial PCA)timePoints = 163;SampleRate = 250;base = 168;		%msec.numchan = 129;bins = 500;cal = 50;numsubs=7;numcells=16;	%number of input cellsnumfacs=52;exclChan=[125 126 127 128 17 14 22 16 11 6 129 55 62 68 73 76 82];	%to avoid having peri-ocular or midline channels chosen as peak channels for ANOVAs.params=[];paramNames = [];EGISname = 'SDA(pro\ts\13-4f\nk)';anovaName = 'SDAfac';tempANOVAtype = 'SC';%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%You only need to change the variables up to this point%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%tempnogave=zeros(numchan,timePoints);tempgave=zeros(numchan,timePoints);if (numsubs * numcells) ~= size(FacScrST,1)	error('The product of numsubs and numcells does not equal the number of observations in the FacScrST factor score matrix');end;if PCAmode == 'temp'	if timePoints ~= size(FacPatST,1)		error('Timepoints variable does not match number of variables in the FacPatST factor pattern matrix');	end;	if numfacs ~= size(FacPatST,2)		error('Numfacs variable does not match number of factors in the FacPatST factor pattern matrix');	end;	tempVar = numchan;    tempVar2 = timePoints;	for i = 1:timePoints		tempgave(:,i)=mean(data(i:timePoints:size(data,1),:))';	end;elseif PCAmode == 'spat'	if numchan ~= size(FacPatST,1)		error('Numchan variable does not match number of variables in the FacPatST factor pattern matrix');	end;	if numfacs ~= size(FacPatST,2)		error('Numfacs variable does not match number of factors in the FacPatST factor pattern matrix');	end;	tempVar = timePoints;    tempVar2 = numchan;	for i = 1:numchan		tempgave(i,:)=mean(data(i:numchan:size(data,1),:));	end;else	error('PCAmode must be set to either temp or spat');end;if length(EGISname) > 27	error('Name of output file (EGISname) too long');end;tempVarSD = ones(1,length(varSDST));	%since varSD is not the same for all the factors, set this to one and then multiply the pattern matrix by the appropriate numbers.numfacs2 = numfacs / size(varSDST,1);	%number of factors retained in second PCA stepnumfacs1 = numfacs / numfacs2;	%number of factors retained in first PCA steptempFacPatST=zeros(size(FacPatST,1), size(FacPatST,2));for i = 1:numfacs1	for k = 1:numfacs2		tempFacPatST(:,(i-1)*numfacs2+k)=diag(varSDST(i,:))*(FacPatST(:,(i-1)*numfacs2+k));	end;end;tempindexdata=zeros(numcells*numsubs*tempVar,3);for cell=1:numcells    tempcell = indexdata(1+(cell-1)*numsubs*tempVar2,1);	for sub=1:numsubs		for obs=1:tempVar			tempindexdata((cell-1)*numsubs*tempVar+(sub-1)*tempVar+obs,:)=[tempcell sub obs];		end;	end;end;tempFacScrST=zeros(size(FacScrST,1), size(FacScrST,2));for i = 1:numfacs1	for j = 1:numfacs2		for k = 1:(numsubs*numcells)			tempFacScrST(1+tempVar*(k-1):tempVar*k,(i-1)*numfacs2+j)=diag(varSD)*FacPat(:,i)*FacScrST(k,(i-1)*numfacs2+j);		end;	end;end;[peakLatency, peakSamp, peakChan] = PCAtoEGIS(PCAmode, cnames, cellcoll, ename, base, numchan, timePoints, SampleRate, bins, cal, EGISname, tempindexdata, tempFacScrST, tempFacPatST, tempVarSD, exclChan, tempnogave, 'EGI', 'GAVE', params, paramNames);[peakLatency, peakSamp, peakChan] = PCAtoEGIS(PCAmode, cnames, cellcoll, ename, base, numchan, timePoints, SampleRate, bins, cal, [EGISname '+g'], tempindexdata, tempFacScrST, tempFacPatST, tempVarSD, exclChan, tempgave, 'EGI', 'GAVE', params, paramNames);eval(['save ' EGISname '.mat']);for i = 1:numfacs;	PCAtoANOVA(tempFacPatST, tempFacScrST, tempVarSD, PCAmode, -(base), numchan, timePoints, bins, numsubs, peakChan(1,i), [1:numcells], peakSamp(1,i), peakSamp(1,i), (1000/SampleRate), 'mean', i, [anovaName num2str(i) '.sa'], tempANOVAtype);end;clear tempVar tempVar2 tempcell tempFacPatST numfacs1 numfacs2 tempVarSD tempindexdata tempgave tempFacScrST tempANOVAtype;