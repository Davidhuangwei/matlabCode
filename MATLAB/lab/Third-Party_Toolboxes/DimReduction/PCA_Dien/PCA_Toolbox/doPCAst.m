function [FacPatST, FacStrST, FacScrST, FacRefST, FacCorST, screeST, facVarST, facVarQST, varSDST] = doPCAst(ROTATION, MAT_TYPE, NUM_FAC, FacScr, KAISER, facVar, facVarQ, FacPat, varSD, NUM_VAR);% doPCAst - [FacPatST, FacPatST, FacStrST, FacScrST, FacRefST, FacCorST, screeST, facVarST, facVarQST, varSDST] = doPCAst(ROTATION, MAT_TYPE, NUM_FAC, FacScr, KAISER, facVar, facVarQ, FacPat, varSD, NUM_VAR);%Inputs%  MAT_TYPE	: Matrix type (SCP: sums-of-squares-cross-product matrix, COV: variance-covariance matrix, COR: correlation matrix)%  NUM_FAC	: Number of factors retained%  FacScr	: Data matrix (observations, factors)%  KAISER	: Kaiser normalization ('K' Kaiser normalization, 'N' no Kaiser normalization, 'C' covariance loadings).%  FacVar	: %age of variance accounted for by each input factor, ignoring other factors.%  FacVarQ	: %age of variance uniquely accounted for by each input factor.%  FacPat	: Factor pattern matrix from 1st PCA step - produces standardized variables from scores, scaled by communality  (variables, factors)%  varSD	: Standard deviations of the variables prior to the input PCA decomposition%  NUM_VAR	: Size of the mode to be factored next (timepoints if spatio-temporal, channels if temporo-spatial).%Outputs%  FacPatST	: Promax factor pattern matrix - produces standardized variables from scores, scaled by communality  (variables, factors)%  FacStrST	: Promax factor structure matrix - correlation between factors and variables (variables, factors)%  FacScrST	: Promax factor scores, variance standardized, non-mean corrected (observations: cells*subjects, factors)%  FacRefST	: Promax reference vector - correlation of factor with variables with variance from other factors eliminated (variables, factors)%  FacCorST	: Promax factor correlations%  screeST    : The full set of unrotated eigenvalues, prior to truncation, for each input factor (output factors, input factors)%  facVarST   : %age of variance accounted for by each Promax rotated factor, ignoring other factors (based on PmxStr)%			  Calculated based on variance of relationship matrix (if COV or SCP, each variable weighted)%  facVarQST  : %age of variance uniquely accounted for by each Promax rotated factor, (based on PmxRef)%			  Calculated based on variance of relationship matrix (if COV or SCP, each variable weighted)%  varSDST    : Standard deviations of the variables prior to the second PCA.%%History%  by Joseph Dien (1/10/01)%  University of Kansas%  jdien@ku.edu%%  Modified (2/28/01) JD%  Altered input names to facilitate use.%%  Modified (3/2/01)  JD%  Dropped scoring coefficient output to avoid singularity problems when calculating it.%%  modified 7/27/02 JD%  Implemented non mean-corrected factor scores.  Factor score output no longer has 1st stage factor patterns reintroduced.%%  modified 8/4/02 JD%  Output generalized so that type of rotation can be specified.%%  modified 10/26/03 JD%  Added option for unscaled loadings during rotation (not for Infomax).  Set Infomax%  rotation to automatically use covariance matrix (i.e., mean-corrected%  but not variance-corrected variables).%%  modified 3/23/04 JD%  Folded LOADINGS option for covariance loadings into Kaiser parameter%  since they're alternatives to each other.%%  Based on doPCA.m.  Takes output of doPCA and performs a PCA on the factor scores in order to produce a spatiotemporal%  or temporospatial PCA result.  A global number of factors is specified for the second stage PCA to keep things simple since%  the statistics literature indicates the overretention of factors does not notably degrade solutions.%  The resulting output has the same structure as the input data but with the number of factors multiplied by the%  second stage factors.  The second stage factors vary most quickly (e.g., for temporospatial PCA, T1S1 T1S2 T1S3...T2S1...etc.).FacPatST=[];FacStrST=[];FacScrST=[];FacRefST=[];FacCorST=[];screeST=[];facVarST=[];facVarQST=[];varSDST=[];for factor = 1:size(FacScr,2)	%input factors	data = reshape(FacScr(:,factor),NUM_VAR,(size(FacScr,1)/NUM_VAR))';	%reshape factor vector so that the second mode is now the variables	disp(['FACTOR #' num2str(factor)]);	[stFacPat, stFacStr, stFacScr, stFacRef, stFacCor, stscree, stfacVar, stfacVarQ, stvarSD] = doPCA(ROTATION, MAT_TYPE, NUM_FAC, data, KAISER);	FacPatST=[FacPatST stFacPat];	FacStrST=[FacStrST stFacStr];	FacScrST=[FacScrST stFacScr];	FacRefST=[FacRefST stFacRef];	FacCorST=[FacCorST stFacCor];	screeST=[screeST stscree];	facVarST = [facVarST; (facVar(factor) .* stfacVar)];	facVarQST = [facVarQST; (facVarQ(factor) .* stfacVarQ)];	varSDST=[varSDST; stvarSD];end